"""
=============================================================
GERENCIADOR DO MODO DE MANUTEN√á√ÉO
=============================================================
Script utilit√°rio para ativar/desativar o modo de manuten√ß√£o
de forma r√°pida e f√°cil.

USO:
    python gerenciar_manutencao.py [ativar|desativar|status]

EXEMPLOS:
    python gerenciar_manutencao.py ativar
    python gerenciar_manutencao.py desativar
    python gerenciar_manutencao.py status
=============================================================
"""

import sys
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv

# Carregar vari√°veis de ambiente
load_dotenv()

def print_header():
    """Imprime o cabe√ßalho do script"""
    print("\n" + "="*70)
    print("  üîß GERENCIADOR DE MODO DE MANUTEN√á√ÉO - Portal UniSystem")
    print("="*70 + "\n")

def get_current_status():
    """Obt√©m o status atual do modo de manuten√ß√£o"""
    try:
        from extensions import supabase_admin
        
        response = supabase_admin.table('DANGER_TABLE_MANUTENCAO')\
            .select('*')\
            .eq('id', '1')\
            .single()\
            .execute()
        
        if response.data:
            return response.data
        return None
    except Exception as e:
        print(f"‚ùå Erro ao consultar status: {e}")
        return None

def show_status():
    """Mostra o status atual do modo de manuten√ß√£o"""
    print("üìä CONSULTANDO STATUS ATUAL...\n")
    
    data = get_current_status()
    
    if not data:
        print("‚ùå N√£o foi poss√≠vel consultar o status da manuten√ß√£o")
        print("   Verifique se a tabela DANGER_TABLE_MANUTENCAO existe no Supabase")
        return
    
    em_manutencao = data.get('manutencao', False)
    
    print(f"Status: {'üî¥ EM MANUTEN√á√ÉO' if em_manutencao else 'üü¢ OPERACIONAL'}")
    print(f"√öltima atualiza√ß√£o: {data.get('updated_at', 'N/A')}")
    print(f"Atualizado por: {data.get('updated_by', 'N/A')}")
    
    if em_manutencao:
        print(f"\n‚ö†Ô∏è  PORTAL BLOQUEADO - Usu√°rios n√£o podem fazer login")
        
        if data.get('mensagem_customizada'):
            print(f"\nMensagem exibida aos usu√°rios:")
            print(f"   '{data.get('mensagem_customizada')}'")
        
        if data.get('data_prevista_fim'):
            print(f"\nPrevis√£o de t√©rmino: {data.get('data_prevista_fim')}")
    else:
        print(f"\n‚úÖ PORTAL FUNCIONANDO NORMALMENTE")

def ativar_manutencao(mensagem=None, horas=2):
    """Ativa o modo de manuten√ß√£o"""
    print("üîß ATIVANDO MODO DE MANUTEN√á√ÉO...\n")
    
    # Verificar status atual
    current = get_current_status()
    if current and current.get('manutencao'):
        print("‚ö†Ô∏è  O portal j√° est√° em modo de manuten√ß√£o!")
        print("   Use 'desativar' para liberar o acesso\n")
        return
    
    # Mensagem padr√£o se n√£o fornecida
    if not mensagem:
        mensagem = "Portal em manuten√ß√£o programada. Estamos realizando melhorias para oferecer uma experi√™ncia ainda melhor. Agradecemos sua compreens√£o!"
    
    # Calcular previs√£o de t√©rmino
    data_prevista = (datetime.now() + timedelta(hours=horas)).isoformat()
    
    try:
        from extensions import supabase_admin
        
        response = supabase_admin.table('DANGER_TABLE_MANUTENCAO')\
            .update({
                'manutencao': True,
                'mensagem_customizada': mensagem,
                'data_inicio': datetime.now().isoformat(),
                'data_prevista_fim': data_prevista,
                'updated_at': datetime.now().isoformat(),
                'updated_by': 'gerenciar_manutencao.py'
            })\
            .eq('id', '1')\
            .execute()
        
        if response.data:
            print("‚úÖ MODO DE MANUTEN√á√ÉO ATIVADO COM SUCESSO!\n")
            print("üî¥ Portal agora est√° BLOQUEADO")
            print("   ‚Ä¢ Usu√°rios n√£o conseguem fazer login")
            print("   ‚Ä¢ P√°gina de manuten√ß√£o ser√° exibida")
            print(f"   ‚Ä¢ Previs√£o de t√©rmino: {horas}h ({data_prevista})")
            print(f"\nüí¨ Mensagem exibida:\n   '{mensagem}'")
            print("\n‚ö†Ô∏è  Para liberar o portal, execute:")
            print("   python gerenciar_manutencao.py desativar\n")
        else:
            print("‚ùå Erro ao ativar modo de manuten√ß√£o")
    
    except Exception as e:
        print(f"‚ùå Erro: {e}\n")

def desativar_manutencao():
    """Desativa o modo de manuten√ß√£o"""
    print("‚úÖ DESATIVANDO MODO DE MANUTEN√á√ÉO...\n")
    
    # Verificar status atual
    current = get_current_status()
    if current and not current.get('manutencao'):
        print("‚úÖ O portal j√° est√° operacional!")
        print("   Nenhuma a√ß√£o necess√°ria\n")
        return
    
    try:
        from extensions import supabase_admin
        
        response = supabase_admin.table('DANGER_TABLE_MANUTENCAO')\
            .update({
                'manutencao': False,
                'mensagem_customizada': None,
                'updated_at': datetime.now().isoformat(),
                'updated_by': 'gerenciar_manutencao.py'
            })\
            .eq('id', '1')\
            .execute()
        
        if response.data:
            print("‚úÖ MODO DE MANUTEN√á√ÉO DESATIVADO COM SUCESSO!\n")
            print("üü¢ Portal agora est√° OPERACIONAL")
            print("   ‚Ä¢ Usu√°rios podem fazer login normalmente")
            print("   ‚Ä¢ Sistema funcionando 100%\n")
        else:
            print("‚ùå Erro ao desativar modo de manuten√ß√£o")
    
    except Exception as e:
        print(f"‚ùå Erro: {e}\n")

def show_help():
    """Mostra a ajuda do script"""
    print("""
USO: python gerenciar_manutencao.py [comando]

COMANDOS DISPON√çVEIS:

  status       Mostra o status atual do modo de manuten√ß√£o
  
  ativar       Ativa o modo de manuten√ß√£o
               - Bloqueia acesso ao portal
               - Exibe p√°gina de manuten√ß√£o aos usu√°rios
  
  desativar    Desativa o modo de manuten√ß√£o
               - Libera acesso ao portal
               - Usu√°rios podem fazer login normalmente

EXEMPLOS:

  python gerenciar_manutencao.py status
  python gerenciar_manutencao.py ativar
  python gerenciar_manutencao.py desativar

DICAS:

  ‚Ä¢ Sempre verifique o status antes de ativar/desativar
  ‚Ä¢ Use mensagens claras para informar os usu√°rios
  ‚Ä¢ Defina previs√µes realistas de tempo de manuten√ß√£o
    """)

def main():
    """Fun√ß√£o principal"""
    print_header()
    
    if len(sys.argv) < 2:
        print("‚ùå Comando n√£o especificado!\n")
        show_help()
        return
    
    comando = sys.argv[1].lower()
    
    if comando == 'status':
        show_status()
    elif comando == 'ativar':
        ativar_manutencao()
    elif comando == 'desativar':
        desativar_manutencao()
    elif comando in ['help', 'ajuda', '-h', '--help']:
        show_help()
    else:
        print(f"‚ùå Comando '{comando}' n√£o reconhecido!\n")
        show_help()
    
    print("="*70 + "\n")

if __name__ == '__main__':
    main()
